  /*
   * Of Note: Arrays are 1-based: (See Cross-Sections of Arrays, Chapter 7, Language Reference Manual)
   */

  TILT:   Proc Options(MAIN);
          Dcl Input Record ENV(V RecSize(100));
          Dcl REC Char(100) Varying;
          Dcl EOF Bit(1) Init('0'B);
          Dcl RecNum Bin(31);
          Dcl Rows Fixed Bin(31);
          Dcl Cols Fixed Bin(31);
          Dcl Row  Fixed Bin(31);
          Dcl Col  Fixed Bin(31);
          Dcl LineLength Fixed Bin(31);
          Dcl Matrix(Rows,Cols) Char(1) CTL;
          Dcl rc Fixed Bin(31);

          On EndFile(Input) EOF='1'B;
          LineLength = 0;
          Cols = 0;

          RecNum = 0;
          Open File(Input);
          Do While (^EOF);
            Read File(Input) Into(REC);
            LineLength = Length(REC);
            If (LineLength > Cols) Then Do;
              Cols = LineLength;
            End;
            If (^EOF) Then Do;
              RecNum = RecNum+1;
            End;
          End;
          Close File(Input);

          Rows = RecNum;
          ALLOCATE Matrix;

          EOF = '0'B;
          Open File(Input);
        
          Row = 1; 
          Do While (^EOF);
            Read File(Input) Into(REC);
            If (^EOF) Then Do;
              Do Col = 1 TO Cols;
                Matrix(Row, Col) = SUBSTR(REC,Col,1);
              End;
              Row = Row+1;
            End;
          End;
          Close File(Input);

          rc = PrintMatrix (Matrix, Rows, Cols);

          Do Col = 1 To Cols;
            rc = PushRocks (Matrix, Rows, Cols, Col);
          End;
          rc = PrintMatrix (Matrix, Rows, Cols);
          rc = TotalLoad (Matrix, Rows, Cols);
          
          Put File(SYSPRINT) List('Total Load: ', rc);
       
  TotalLoad: Proc(Matrix, Rows, Cols) Returns(Fixed Bin(31));
          Dcl Matrix(*,*) Char(1) CTL;
          Dcl Rows Fixed Bin(31);
          Dcl Cols Fixed Bin(31);
          Dcl Load Fixed Bin(31);
          Dcl RowCount Fixed Bin(31);
 
          Load = 0;
          Do Row = 1 to Rows; 
            RowCount = 0;
            Do Col = 1 to Cols;
              If (Matrix(Row, Col) = 'O') Then Do;
                RowCount = RowCount+1; 
              End;
            End;
            Load = Load + (RowCount*(Rows-Row+1));
          End;
          Return (Load);
  End TotalLoad; 
          
 
  PrintMatrix: Proc(Matrix, Rows, Cols) Returns(Fixed Bin(31));
          Dcl Matrix(*,*) Char(1) CTL;
          Dcl Rows Fixed Bin(31);
          Dcl Cols Fixed Bin(31);
          Dcl SPACE Char(1);
          Dcl Row Fixed Bin(31);
          Dcl Col Fixed Bin(31);

          SPACE = ' ';

          Put Skip;
          Do Row = 1 to Rows; 
            Put Skip File(SYSPRINT) List(SPACE);
            Do Col = 1 to Cols;
              Put File(SYSPRINT) Edit(Matrix(Row, Col)) (A);
            End;
          End;
          Return (0);
  End PrintMatrix;

  PushRocks: Proc(Matrix, Rows, Cols, Col) Returns(Fixed Bin(31));
          Dcl Matrix(*,*) Char(1) CTL;
          Dcl Rows Fixed Bin(31);
          Dcl Cols Fixed Bin(31);
          Dcl Col  Fixed Bin(31);
          Dcl Obstruction Fixed Bin(31);
          Obstruction = 0; 

          Do Row = 1 To Rows;
            If (Matrix(Row, Col) = 'O') Then Do;
              If (Obstruction+1 < Row) Then Do;
                Matrix(Obstruction+1, Col) = 'O';
                Matrix(Row, Col) = '.';
                Obstruction = Obstruction+1;
              End;
              Else Do;
                Obstruction = Row;
              End;
            End;
            Else If (Matrix(Row, Col) <> '.') Then Do;
              Obstruction = Row;
            End;
          End;
          Return (0);
  End PushRocks;

  End TILT;

